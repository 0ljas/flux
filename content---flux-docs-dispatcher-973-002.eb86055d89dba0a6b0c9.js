(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{50:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));n(0);var a=n(66);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i={id:"dispatcher",title:"Dispatcher"},o=[{value:"API",id:"api",children:[]},{value:"Example",id:"example",children:[]}],l={rightToc:o},p="wrapper";function s(e){var t=e.components,n=c(e,["components"]);return Object(a.b)(p,r({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Dispatcher is used to broadcast payloads to registered callbacks. This is\ndifferent from generic pub-sub systems in two ways:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Callbacks are not subscribed to particular events. Every payload is\ndispatched to every registered callback."),Object(a.b)("li",{parentName:"ul"},"Callbacks can be deferred in whole or part until other callbacks have\nbeen executed.")),Object(a.b)("p",null,"Check out ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/facebook/flux/blob/master/src/Dispatcher.js"}),"Dispatcher.js")," for the source code."),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"register(function callback): string")),"\nRegisters a callback to be invoked with every dispatched payload. Returns a token that can be used with ",Object(a.b)("inlineCode",{parentName:"p"},"waitFor()"),".")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"unregister(string id): void")),"\nRemoves a callback based on its token.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"waitFor(array<string> ids): void")),"\nWaits for the callbacks specified to be invoked before continuing execution of the current callback. This method should only be used by a callback in response to a dispatched payload.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"dispatch(object payload): void"))," Dispatches a payload to all registered callbacks.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"isDispatching(): boolean"))," Is this Dispatcher currently dispatching."))),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("p",null,"For example, consider this hypothetical flight destination form, which\nselects a default city when a country is selected:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"var flightDispatcher = new Dispatcher();\n\n// Keeps track of which country is selected\nvar CountryStore = {country: null};\n\n// Keeps track of which city is selected\nvar CityStore = {city: null};\n\n// Keeps track of the base flight price of the selected city\nvar FlightPriceStore = {price: null};\n")),Object(a.b)("p",null,"When a user changes the selected city, we dispatch the payload:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"flightDispatcher.dispatch({\n  actionType: 'city-update',\n  selectedCity: 'paris'\n});\n")),Object(a.b)("p",null,"This payload is digested by ",Object(a.b)("inlineCode",{parentName:"p"},"CityStore"),":"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'city-update') {\n    CityStore.city = payload.selectedCity;\n  }\n});\n")),Object(a.b)("p",null,"When the user selects a country, we dispatch the payload:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"flightDispatcher.dispatch({\n  actionType: 'country-update',\n  selectedCountry: 'australia'\n});\n")),Object(a.b)("p",null,"This payload is digested by both stores:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"})," CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'country-update') {\n    CountryStore.country = payload.selectedCountry;\n  }\n});\n")),Object(a.b)("p",null,"When the callback to update ",Object(a.b)("inlineCode",{parentName:"p"},"CountryStore")," is registered, we save a reference\nto the returned token. Using this token with ",Object(a.b)("inlineCode",{parentName:"p"},"waitFor()"),", we can guarantee\nthat ",Object(a.b)("inlineCode",{parentName:"p"},"CountryStore")," is updated before the callback that updates ",Object(a.b)("inlineCode",{parentName:"p"},"CityStore"),"\nneeds to query its data."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'country-update') {\n    // `CountryStore.country` may not be updated.\n    flightDispatcher.waitFor([CountryStore.dispatchToken]);\n    // `CountryStore.country` is now guaranteed to be updated.\n\n    // Select the default city for the new country\n    CityStore.city = getDefaultCityForCountry(CountryStore.country);\n  }\n});\n")),Object(a.b)("p",null,"The usage of ",Object(a.b)("inlineCode",{parentName:"p"},"waitFor()")," can be chained, for example:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"FlightPriceStore.dispatchToken =\n  flightDispatcher.register(function(payload) {\n    switch (payload.actionType) {\n      case 'country-update':\n      case 'city-update':\n        flightDispatcher.waitFor([CityStore.dispatchToken]);\n        FlightPriceStore.price =\n          getFlightPriceStore(CountryStore.country, CityStore.city);\n        break;\n  }\n});\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"country-update")," payload will be guaranteed to invoke the stores'\nregistered callbacks in order: ",Object(a.b)("inlineCode",{parentName:"p"},"CountryStore"),", ",Object(a.b)("inlineCode",{parentName:"p"},"CityStore"),", then\n",Object(a.b)("inlineCode",{parentName:"p"},"FlightPriceStore"),"."))}s.isMDXComponent=!0},66:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a),c=r.a.createContext({}),i=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},o=function(e){var t=i(e.components);return r.a.createElement(c.Provider,{value:t},e.children)};var l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),s=i(n),b=a,u=s[o+"."+b]||s[b]||p[b]||c;return n?r.a.createElement(u,Object.assign({},{ref:t},l,{components:n})):r.a.createElement(u,Object.assign({},{ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[l]="string"==typeof e?e:a,i[1]=o;for(var b=2;b<c;b++)i[b]=n[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);